name: Deploy to VPS Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 147.93.111.68 >> ~/.ssh/known_hosts

      - name: Deploy to Server
        env:
          DEPLOY_PATH: /home/samantacalling
          DEPLOY_HOST: 147.93.111.68
          DEPLOY_USER: root
        run: |
          ssh $DEPLOY_USER@$DEPLOY_HOST "bash -s" << 'ENDSSH'
          # Set deployment path
          DEPLOY_PATH=/home/samantacalling
          echo "🚀 Starting deployment to $DEPLOY_PATH..."

          # Ensure the deployment directory exists
          if [ ! -d "$DEPLOY_PATH" ]; then
            echo "📁 Creating deployment directory..."
            mkdir -p "$DEPLOY_PATH" || { echo "❌ Failed to create directory"; exit 1; }
          fi

          # Navigate to deployment directory
          cd "$DEPLOY_PATH" || { echo "❌ Failed to navigate to deployment directory"; exit 1; }

          # Check if it's a git repository
          if [ ! -d ".git" ]; then
            echo "🔄 Initializing Git repository..."
            git init || { echo "❌ Git init failed"; exit 1; }
            git remote add origin git@github.com:LL05-AI-Dowell/samantacalling.git || { echo "❌ Adding remote failed"; exit 1; }
          else
            echo "✅ Git repository already initialized."
          fi

          # Pull latest changes without resetting everything
          echo "⬇️ Pulling latest code..."
          git pull origin main --rebase || { echo "❌ Git pull failed"; exit 1; }

          # Stop existing containers (if running)
          echo "🛑 Stopping existing containers..."
          docker compose down || true

          # Clean up unused Docker resources
          echo "🧹 Cleaning up Docker resources..."
          docker system prune -af || { echo "⚠️ Docker cleanup failed"; exit 1; }

          # Build and restart services
          echo "🏗️ Building and deploying containers..."
          docker compose build --no-cache || { echo "❌ Docker build failed"; exit 1; }
          docker compose up -d || { echo "❌ Docker compose up failed"; exit 1; }

          # Verify containers are running
          echo "✅ Verifying containers..."
          if ! docker compose ps | grep -q "Up"; then
            echo "❌ Containers failed to start properly"
            docker compose logs
            exit 1
          fi

          echo "✨ Deployment completed successfully!"
          ENDSSH

      - name: Verify Deployment
        run: |
          echo "⏳ Waiting for services to start..."
          sleep 30  # Allow time for services to start
          
          # Check if services are responding
          echo "🔍 Verifying service availability..."
          curl -f -s -S --retry 3 --retry-delay 5 -I http://147.93.111.68:5173 || {
            echo "❌ Service verification failed"
            exit 1
          }
          echo "✅ All services are up and running!"
